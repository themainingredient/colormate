version: 2
jobs:
  testing:
    docker:
      - image: nikolaik/python-nodejs:python3.7-nodejs11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-
      - run: npm install
      - run:
          name: Run tests
          command: npm run test
      - save_cache:
          paths:
            - node_modules
          key: v1-dep-{{ checksum "package.json" }}

  linting:
    docker:
      - image: nikolaik/python-nodejs:python3.7-nodejs11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-
      - run:
          name: Run ESLint
          command: npm run lint

  deploy-staging:
    docker:
      - image: nikolaik/python-nodejs:python3.7-nodejs11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-

      - run: apt-get update
      - run: apt-get -y install jq zip moreutils
      - run: pip install awscli

      - run:
          name: "Run semantic-release"
          command: |
            npm i
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            npx semantic-release --branch ${CIRCLE_BRANCH} --dry-run

      - run:
          name: Setup Environment Variables
          command: |
            echo 'export PATH="$GOPATH/bin:$PATH"' >> $BASH_ENV
            echo 'export REACT_APP_VERSION="$(jq --raw-output '.version' package.json)"' >> $BASH_ENV

      - run: echo "REACT_APP_VERSION:" $REACT_APP_VERSION
      - run:
          name: Build project
          command: npm run build
      - run:
          name: Zipping project
          command: |
            echo "creating zip file:" colormate_${REACT_APP_VERSION}.zip
            zip -r colormate_${REACT_APP_VERSION}.zip colormate.sketchplugin
      - run:
          name: Deploy to S3
          command: aws s3 cp colormate_${REACT_APP_VERSION}.zip s3://colormate-testing/staging/

      - run:
          name: Notify slack channel
          command: |
            curl --header "Content-Type: application/json" --request POST --data \
            '{"text": "<'"$CIRCLE_BUILD_URL"'|#'"$CIRCLE_BUILD_NUM"'> New testing version deployed you can download it here: '"${AWS_S3_URL_STAGING}/colormate_${REACT_APP_VERSION}.zip"'"}' \
            $SLACK_WEBHOOK_URL

      - persist_to_workspace:
          root: ~/repo
          paths:
            - colormate_${REACT_APP_VERSION}.zip

  release:
    docker:
      - image: nikolaik/python-nodejs:python3.7-nodejs11
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-
      - run:
          name: Release
          command: |
            npm i
            npx semantic-release

  deploy-production: # TODO: setup production deployment [npm run build & npm run publish]
    docker:
      - image: nikolaik/python-nodejs:python3.7-nodejs11
    working_directory: ~/repo
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get -y install jq zip moreutils

      - run:
          name: Notify slack channel
          command: |
            curl --header "Content-Type: application/json" --request POST --data \
            '{"text": "<'"$CIRCLE_BUILD_URL"'|#'"$CIRCLE_BUILD_NUM"'> New Colormate version deployed"}' \
            $SLACK_WEBHOOK_URL

workflows:
  version: 2
  build_and_test:
    jobs:
      - testing
      - linting
      - deploy-staging:
          requires:
            - testing
            - linting
          filters:
            branches:
              only:
                - /release/.*/
                - feature/ship-to-production
      - release:
          requires:
            - testing
            - linting
          filters:
            branches:
              only:
                - master
      - approve-production:
          type: approval
          requires:
            - release
      - deploy-production:
          requires:
            - approve-production
