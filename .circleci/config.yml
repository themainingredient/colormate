version: 2
jobs:
  testing:
    docker:
      - image: circleci/node:11.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-
      - run: npm install
      - run:
          name: Run tests
          command: npm run test
      - save_cache:
          paths:
            - node_modules
          key: v1-dep-{{ checksum "package.json" }}

  linting:
    docker:
      - image: circleci/node:11.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-
      - run:
          name: Run ESLint
          command: npm run lint

  deploy_to_aws:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 sync jekyll/_site/docs s3://colormate/

  deploy-test:
    docker:
      - image: circleci/node:11.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "package.json" }}
            - v1-dep-
      - run:
          name: Install again (fix bindings)
          command: npm install
      - run:
          name: Build project
          command: npm run build
      - run:
          name: Zip project
          command: zip -r colormate.zip colormate.sketchplugin
      # - run:
      #     name: Notify slack channel
      #     command: |
      #       curl --header "Content-Type: application/json" --request POST --data \
      #       '{"text": "<'"$CIRCLE_BUILD_URL"'|#'"$CIRCLE_BUILD_NUM"'> Build deployed '"$CIRCLE_JOB"'"}' \
      #       $SLACK_WEBHOOK
      # - run:
      #     name: Run semantic-release
      #     command: |
      #       npm i
      #       npx semantic-release

workflows:
  version: 2
  build_and_test:
    jobs:
      # - testing
      # - linting
      - deploy-test:
          # requires:
          # - testing
          # - linting
          filters:
            branches:
              only:
                - develop
      - deploy_to_aws:
          requires:
            - deploy-test
      # - approve-production:
      #     type: approval
      #     requires:
      #       - deploy-test
      # - deploy-production:
      #     requires:
      #       - approve-production
