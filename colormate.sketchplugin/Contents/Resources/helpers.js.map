{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/app/helpers.js"],"names":["calcOpacityPercentage","hexColor","hexOpacity","substr","Math","round","parseInt","calculateLuminance","color","rebasedColor","pow","calculateCombinedLuminance","cleanedColor","R","G","B","helpers","calculateContrast","colorLuminance","whiteLuminance","Number","toFixed","closeWindow","window","postMessage"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CAAsC;;AAE/B,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,QAAD,EAAc;AACjD,MAAMC,UAAU,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAAC,CAAjB,CAAnB;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACJ,UAAD,EAAa,EAAb,CAAR,GAA2B,IAAtC,CAAP;AACD,CAHM;AAKA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAC3C;AACA,MAAMC,YAAY,GAAGH,QAAQ,CAACE,KAAD,EAAQ,EAAR,CAAR,GAAsB,GAA3C;AAEA;;;;;;AAMA,MAAIC,YAAY,IAAI,OAApB,EAA6B;AAC3B,WAAOA,YAAY,GAAG,KAAtB;AACD;;AAED,SAAOL,IAAI,CAACM,GAAL,CAAS,CAACD,YAAY,GAAG,KAAhB,IAAyB,KAAlC,EAAyC,GAAzC,CAAP,CAd2C,CAcW;AACvD,CAfM;AAiBA,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACV,QAAD,EAAc;AACtD,MAAMW,YAAY,GAAGX,QAAQ,CAACE,MAAT,CAAgB,CAAhB,CAArB,CADsD,CACb;;AACzC,MAAMU,CAAC,GAAGD,YAAY,CAACT,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAV,CAFsD,CAEjB;;AACrC,MAAMW,CAAC,GAAGF,YAAY,CAACT,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAV,CAHsD,CAGjB;;AACrC,MAAMY,CAAC,GAAGH,YAAY,CAACT,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAV,CAJsD,CAIjB;;AAErC;;;;;;;;AAOA,SACE,SAASa,2DAAA,CAA2BH,CAA3B,CAAT,GACE,SAASG,2DAAA,CAA2BF,CAA3B,CADX,GAEE,SAASE,2DAAA,CAA2BD,CAA3B,CAHb;AAKD,CAlBM;AAoBA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,KAAD,EAAW;AAC1C,MAAMU,cAAc,GAAGP,0BAA0B,CAACH,KAAD,CAAjD;AACA;;;;;;AAKA,MAAMW,cAAc,GAAG,CAAvB;AAEA,MAAID,cAAc,KAAKC,cAAvB,EAAuC,OAAO,CAAP;AAEvC,SAAOC,MAAM,CAAC,CAAC,CAACD,cAAc,GAAG,IAAlB,KAA2BD,cAAc,GAAG,IAA5C,CAAD,EAAoDG,OAApD,CAA4D,CAA5D,CAAD,CAAb;AACD,CAZM;AAcA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/BC,QAAM,CAACC,WAAP,CAAmB,aAAnB;AACD,CAFM,C","file":"helpers.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/app/helpers.js\");\n","import * as helpers from './helpers'; // eslint-disable-line import/no-self-import\n\nexport const calcOpacityPercentage = (hexColor) => {\n  const hexOpacity = hexColor.substr(-2);\n  return Math.round(parseInt(hexOpacity, 16) / 2.55);\n};\n\nexport const calculateLuminance = (color) => {\n  // Rebasing the incoming hex color to a value between 0 and 1, 0 being 0% intensity, and 1 being 100% intensity\n  const rebasedColor = parseInt(color, 16) / 255;\n\n  /**\n   * There are 2 different ways to calculate the Luminance of a color, depending on the input value.\n   * When the color intensity is lower than 3.928%, meaning black or really dark grey, we use the first method.\n   * When the color intensity is higher we use the second method.\n   */\n\n  if (rebasedColor <= 0.03928) {\n    return rebasedColor / 12.92;\n  }\n\n  return Math.pow((rebasedColor + 0.055) / 1.055, 2.4); // eslint-disable-line no-restricted-properties\n};\n\nexport const calculateCombinedLuminance = (hexColor) => {\n  const cleanedColor = hexColor.substr(1); // Remove the # of the incoming hex color\n  const R = cleanedColor.substr(0, 2); // Grab the first and second chars in the color, representing the red value\n  const G = cleanedColor.substr(2, 2); // Grab the third and fourth chars in the color, representing the green value\n  const B = cleanedColor.substr(4, 2); // Grab the fifth and sixth chars in the color, representing the blue value\n\n  /**\n   * Here we calculate the Luminance of a color in the RGB space\n   * The numbers that we use to multiply the calculateLuminance of R, G, and B is how much the light contributes\n   * to the intensity perceived by humans. Green light contributes the most, and blue the least.\n   *\n   * More info here: https://en.wikipedia.org/wiki/Relative_luminance\n   */\n  return (\n    0.2126 * helpers.calculateLuminance(R)\n    + 0.7152 * helpers.calculateLuminance(G)\n    + 0.0722 * helpers.calculateLuminance(B)\n  );\n};\n\nexport const calculateContrast = (color) => {\n  const colorLuminance = calculateCombinedLuminance(color);\n  /**\n   * The luminance of a color is represented by a color between 0 and 1.\n   * Black has a luminosity of 0, meaning it reflects none of the light.\n   * White has a luminosity of 1, meaning it reflects all the light the falls on it.\n   */\n  const whiteLuminance = 1;\n\n  if (colorLuminance === whiteLuminance) return 0;\n\n  return Number(((whiteLuminance + 0.05) / (colorLuminance + 0.05)).toFixed(2));\n};\n\nexport const closeWindow = () => {\n  window.postMessage('closeWindow');\n};\n"],"sourceRoot":""}